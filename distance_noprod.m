function [D,W,error] = distance_noprod(X)
% This function takes a set of parameters and returns the distance between
% the moments in the data and the moments generated by the parameter set.

    % Reset random number generator
    rng(80085);
    
    % Start timer
    tic
    
    %read in parameter names from the X vector
    scale_h    =  X(3);
    ag         =  .5;
    bg         =  .5;
    lnF        =  scale_h + log(X(1));
    delta      =  X(2);
    scale_f    =  scale_h + log(X(4));
    beta       =  X(5);
    ah         =  X(6);
    bh         =  X(7);
    L_p        =  0;
    D_p        =  0;
    L_z        =  X(8);
    D_z        =  X(9);
    L_b        =  X(10);
    alp        =  0;
    gam        =  X(11)*(1+beta)/beta;
    cs         =  X(12);
    sig_p      =  X(13);
    
    main_noprod;  %this is the main program (to run simulation, generate moments, etc)
    
    %% Targets
    [Data, W] = target_stats();

    display(Data);
    display(W);

    %% Simulated data 
    Model = cat(1,vtran,hazrate,clidist,mnumex,mavship,mavex,mreg,mexreg,mexshr,mlagereg,mlagdreg,mdeathreg);
    
    % Construct loss
    try
    
        error = Data-Model;
        D = error'*W*error;
    
        % Check for NaNs
        nanflag = isnan(D); 
        if nanflag>0;
            D = D * 10; 
        end
    
        % Punish for value function non-convergence
        punishment;
        D = D*(1+punishment);
        
        % Print Diagnostics
        mmm = cat(2,Data,Model) %data/model comparison
        X %print out current parameter guess
        D %loss
    
        %Simple unweighted loss
        Old_D = norm(error)/norm(Data)
    
        %Print loop time in minutes
        last_loop_run_time = toc/60
    
    catch err 
    
        % If broken for any reason, return high loss
        D = 1e12;
    
    end %end try/catch

end %end function
