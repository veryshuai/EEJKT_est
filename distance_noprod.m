function [D,W,error,simulated_data] = distance_noprod(X)
% This function takes a set of parameters and returns the distance between
% the moments in the data and the moments generated by the parameter set.

    % Long format for printing
    format long;

    % Reset random number generator
    rng(80085);
    
    % Start timer
    tic
    
    % Change X vector into parameter names
    X2params(X)

    % Get parameters
    SetParams_noprod;
    
    % Get policy and value functions
    [lambda_f,lambda_h,pi_tilda_h,pi_tilda_f,c_val_h,c_val_f,punishment] = solve(mm);
    
    % Simulate model and create loss function statistics
    [vtran,hazrate,clidist,mstat,mnumex,mavex,mavship,mreg,mexreg,mexshr,mlagereg,mlagdreg,mdeathreg,simulated_data] = moms_nocell(mm,c_val_h,c_val_f,lambda_f,lambda_h);
    
    %% Targets
    [Data, W] = target_stats();

    %% Simulated data 
    Model = cat(1,vtran,hazrate,clidist,mnumex,mavship,mavex,mreg,mexreg,mexshr,mlagereg,mlagdreg,mdeathreg);
    
    % Construct loss
    try
    
        error = Data-Model;
        D = error'*W*error;
    
        % Check for NaNs
        nanflag = isnan(D); 
        if nanflag>0;
            D = D * 10; 
        end
    
        % Punish for value function non-convergence
        punishment;
        D = D*(1+punishment);
        
        % Print Diagnostics
        mmm = cat(2,Data,Model) %data/model comparison
        X %print out current parameter guess
        D %loss
    
        %Simple unweighted loss
        Old_D = norm(error)/norm(Data)
    
        %Print loop time in minutes
        last_loop_run_time = toc/60
    
    catch err 
    
        % If broken for any reason, return high loss
        D = 1e12;
    
    end %end try/catch

end %end function
